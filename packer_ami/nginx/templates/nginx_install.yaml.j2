- name: Install NGINX
  gather_facts: true
  hosts: 
    - 3.96.214.110
  become: true
  vars:
    MACHINE:
      name: my-nginx-ami
      nginx_user: "www-data"
      nginx_config_file: "/etc/nginx/nginx.conf"
      nginx_default_site: "/etc/nginx/sites-available/default"
      website_root: "/var/www/html"
      ami_block_device_mappings:
        device_name: /dev/sdb
        volume_size: 10
        volume_type: gp3
        iops: 3000
        delete_on_termination: true
        vg_name: vg01
        lv_name: lv_app
        fs_mountpoint: '/u01/app'
      #website_files: "../packer_ami/nginx/templates/index.html"
      website_files: "index.html"

  tasks:
    #- name: Create website root directory
    #  ansible.builtin.file:
    #    path: {{ MACHINE.website_root }}
    #    state: directory
    #    owner: www-data
    #    group: www-data
    #    mode: '0755'
    #- name: Install NGINX
    #  ansible.builtin.yum:
    #    name: nginx
    #    state: present
    #  when: ansible_os_family == "RedHat"

    - name: Install NGINX
      ansible.builtin.apt:
        name: nginx
        state: present

    - name: Check NGINX installation
      ansible.builtin.command:
        cmd: nginx -v
      register: nginx_version
      ignore_errors: yes

    - name: Print NGINX version
      ansible.builtin.debug:
        msg: "NGINX version: "
      when: nginx_version is succeeded

    #- name: Install NGINX (Debian/Ubuntu)
    ##  ansible.builtin.apt:
     #   name: nginx
     #   state: present
     #   update_cache: yes
     # when: ansible_os_family == "Debian"

   
    
   # - name: Deploy custom NGINX configuration
   #   ansible.builtin.template:
   #     src: ../packer_ami/nginx/templates/nginx.conf.j2
   #     dest: "{{ MACHINE.nginx_config_file }}"
   #     mode: '0644'
   #     #owner: "{{ MACHINE.nginx_user }}"
   #     #group: "{{ MACHINE.nginx_user }}"
   #     owner: root
   #     group: root
   #   notify:
   #     - Restart NGINX

    #- name: Set up default website
    #  ansible.builtin.template:
    ##    src: ../packer_ami/nginx/templates/default_site.j2
     #   dest: "{{ MACHINE.nginx_default_site }}"
      #  mode: '0644'
       # #owner: "{{ MACHINE.nginx_user }}"
        #group: "{{ MACHINE.nginx_user }}"
        #owner: root
        #group: root
      #notify:
      #  - Restart NGINX

    #- name: Copy website files
    #  ansible.builtin.copy:
    #    src: "{{ MACHINE.website_files }}"
    #    dest: "{{ MACHINE.website_root }}/index.html"
    #    owner: "{{ MACHINE.nginx_user }}"
    #    group: "{{ MACHINE.nginx_user }}"
        #owner: root
        #group: root
    #    mode: '0755'

   # - name: Ensure NGINX is started and enabled
   #   ansible.builtin.service:
   #     name: nginx
   #     state: started
   #     enabled: yes
      

  #handlers:
  #  - name: Restart NGINX
  #    ansible.builtin.service:
  #      name: nginx
  #      state: reloaded
